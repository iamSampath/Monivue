name: Build and Release Monivue

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-13, macos-14]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
        cache: 'maven'

    - name: Build Application and Installer with Maven
      shell: bash
      run: |
        ARCH_SUFFIX=""
        if [ "${{ matrix.os }}" = "macos-13" ]; then
          ARCH_SUFFIX="-Intel"
        elif [ "${{ matrix.os }}" = "macos-14" ]; then
          ARCH_SUFFIX="-AppleSilicon"
        elif [ "${{ matrix.os }}" = "windows-latest" ]; then
          ARCH_SUFFIX="-Windows"
        fi
        mvn -B clean package -Dinstaller.name.suffix="$ARCH_SUFFIX"

    - name: Upload Installer Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}
        path: target/installer/*

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.MONIVUE_PAT }}

    - name: Get PR Label for bump
      id: get_label
      run: |
        LABEL=$(curl -s -H "Authorization: token ${{ secrets.MONIVUE_PAT }}" \
          https://api.github.com/repos/${{ github.repository }}/commits/${{ github.sha }}/pulls \
          | jq -r '.[0].labels[].name' | grep -E 'major|minor|patch' || echo patch)
        echo "LABEL=$LABEL" >> $GITHUB_ENV
        echo "Using label: $LABEL"

    - name: Auto-bump version.txt
      id: bump
      run: |
        VERSION=$(cat version.txt)
        IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"

        case "$LABEL" in
          major) MAJOR=$((MAJOR + 1)); MINOR=0; PATCH=0 ;;
          minor) MINOR=$((MINOR + 1)); PATCH=0 ;;
          patch) PATCH=$((PATCH + 1)) ;;
        esac

        NEW_VERSION="${MAJOR}.${MINOR}.${PATCH}"
        echo "$NEW_VERSION" > version.txt
        echo "VERSION=$NEW_VERSION" >> $GITHUB_ENV
        echo "VERSION_TAG=v$NEW_VERSION" >> $GITHUB_ENV
      env:
        LABEL: ${{ env.LABEL }}

    - name: Generate or update CHANGELOG.md
      run: |
        echo "## [v${{ env.VERSION }}] - $(date +'%Y-%m-%d')" >> tmp_changelog.txt
        echo "" >> tmp_changelog.txt
        git log -n 10 --pretty=format:"- %s" >> tmp_changelog.txt
        echo -e "\n" >> tmp_changelog.txt

        if [ -f CHANGELOG.md ]; then
          cat tmp_changelog.txt CHANGELOG.md > CHANGELOG.md.new
        else
          cp tmp_changelog.txt CHANGELOG.md.new
        fi

        mv CHANGELOG.md.new CHANGELOG.md

    - name: Commit version + changelog
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        git add version.txt CHANGELOG.md
        git commit -m "ðŸ”¼ Bump version to ${{ env.VERSION }} and update changelog [skip ci]"
        git push origin main

    - name: Download all installer artifacts
      uses: actions/download-artifact@v4
      with:
        path: all-artifacts

    - name: Create Git Tag
      run: |
        git tag $VERSION_TAG
        git push origin $VERSION_TAG
      env:
        VERSION_TAG: ${{ env.VERSION_TAG }}

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ env.VERSION_TAG }}
        name: Monivue ${{ env.VERSION_TAG }}
        body_path: tmp_changelog.txt
        files: all-artifacts/**/*
      env:
        GITHUB_TOKEN: ${{ secrets.MONIVUE_PAT }}
